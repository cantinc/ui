import{e as n,C as e}from"./Component-c6300f87.js";import{z as t,C as o,x as r,S as a,F as p,B as s}from"./docs-b93caad8.js";import"./Typography-840ee348.js";const l=new a(!1);var c=n({id:"default",title:"Default",description:"Use `Drawer` inside `Drawers`\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\nimport { State } from 'watch-state'\n\nimport { Drawers, Drawer, BurgerButton } from '@cantinc/ui'\n\nconst show = new State(false)\n\ninnet(\n  <>\n    <BurgerButton onclick={() => { show.value = true }} />\n    <Drawers>\n      <show when={show}>\n        <Drawer onclose={() => { show.value = false }}>\n          Content\n        </Drawer>\n      </show>\n    </Drawers>\n  </>,\n  dom,\n)",example:[{type:"portal",props:{parent:document.body},children:[{type:t,children:[{type:"show",props:{when:l},children:[{type:o,props:{onclose:()=>{l.value=!1}},children:["Content"]}]}]}]},{type:r,props:{onclick:()=>{l.value=!0}}}]});const i=new a(!1),w=new a(!1),d=new a(!1),h=new a(!1);function m(n,e=100){return[...new Array(e)].map((()=>[n,{type:"br"}]))}var u=[c,n({id:"placement",title:"placement",description:"Use `Drawer` inside `Drawers`\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\nimport { State } from 'watch-state'\n\nimport { Drawers, Drawer, Button, Flex } from '@cantinc/ui'\n\nconst left = new State(false)\nconst top = new State(false)\nconst right = new State(false)\nconst bottom = new State(false)\n\nfunction content (str: string, count = 100) {\n  return [...new Array(count)].map(() => [str, <br />])\n}\n\ninnet(\n  <Flex wrap gap={16}>\n    <portal parent={document.body}>\n      <Drawers>\n        <show when={left}>\n          <Drawer\n            padding={64}\n            placement='left'\n            onclose={() => { left.value = false }}>\n            {content('Left')}\n          </Drawer>\n        </show>\n        <show when={top}>\n          <Drawer\n            padding={64}\n            placement='top'\n            onclose={() => { top.value = false }}>\n            {content('Top')}\n          </Drawer>\n        </show>\n        <show when={right}>\n          <Drawer\n            padding={64}\n            placement='right'\n            onclose={() => { right.value = false }}>\n            {content('Right')}\n          </Drawer>\n        </show>\n        <show when={bottom}>\n          <Drawer\n            padding={64}\n            placement='bottom'\n            onclose={() => { bottom.value = false }}>\n            {content('Bottom')}\n          </Drawer>\n        </show>\n      </Drawers>\n    </portal>\n    <Button onclick={() => { left.value = true }}>\n      Left\n    </Button>\n    <Button onclick={() => { top.value = true }}>\n      Top\n    </Button>\n    <Button onclick={() => { right.value = true }}>\n      Right\n    </Button>\n    <Button onclick={() => { bottom.value = true }}>\n      Bottom\n    </Button>\n  </Flex>,\n  dom,\n)",example:{type:p,props:{wrap:!0,gap:16},children:[{type:"portal",props:{parent:document.body},children:[{type:t,children:[{type:"show",props:{when:i},children:[{type:o,props:{padding:64,placement:"left",onclose:()=>{i.value=!1}},children:[m("Left")]}]},{type:"show",props:{when:w},children:[{type:o,props:{padding:64,placement:"top",onclose:()=>{w.value=!1}},children:[m("Top")]}]},{type:"show",props:{when:d},children:[{type:o,props:{padding:64,placement:"right",onclose:()=>{d.value=!1}},children:[m("Right")]}]},{type:"show",props:{when:h},children:[{type:o,props:{padding:64,placement:"bottom",onclose:()=>{h.value=!1}},children:[m("Bottom")]}]}]}]},{type:s,props:{onclick:()=>{i.value=!0}},children:["Left"]},{type:s,props:{onclick:()=>{w.value=!0}},children:["Top"]},{type:s,props:{onclick:()=>{d.value=!0}},children:["Right"]},{type:s,props:{onclick:()=>{h.value=!0}},children:["Bottom"]}]}})],f=()=>({type:e,props:{component:t,name:"Drawers",description:"# Drawers\n\nUse this component to show aside popup.\n\n```typescript\nimport { Drawers, Drawer } from '@cantinc/ui'\n```\n\n## Usage\n\nAdd `Drawers` into a place you want to put modal HTML elements.\n\n```tsx\nfunction App () {\n  return (\n    <>\n      <div id='root'>...</div>\n      <Drawers>\n        ...\n      </Drawers>\n    </>\n  )\n}\n```\n\n*Note: put it inside an element without parents that have css property of `transform`.*\n\nYou can use `portal` to add modals anywhere.\n\n```tsx\nfunction Global () {\n  return (\n    <portal parent={document.body}>\n      \x3c!-- Other stuff --\x3e\n      <Drawers>\n        ...\n      </Drawers>\n    </portal>\n  )\n}\n```\n",examples:u}});export{f as default};
