import{e,C as n}from"./Component-8e718c3a.js";import{F as r,a as t}from"./FormSet-a8b229d5.js";import{ar as o,I as i,a6 as s,B as d,au as p,X as a}from"./docs-c7a99efa.js";import{F as l}from"./FormInput-355f862a.js";import"./Typography-21d0fa4f.js";import"./useField-17e78dd8.js";import"./Upload-bfbab003.js";var m=e({id:"default",title:"Default",description:"Here you can see a simple example with [FormInput](/ui/forms/input).\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport {\n  Form,\n  FormSet,\n  Button,\n  Buttons,\n  FormInput,\n  FormInputProps,\n} from '@cantinc/ui'\n\ninnet(\n  <Form vertical>\n    <FormSet<FormInputProps>\n      element={FormInput}\n      name='address'\n      label='Address'>\n      <Icon icon='plus' />\n      Add an address\n    </FormSet>\n    <Buttons>\n      <Button view='secondary' flex type='reset'>\n        Reset\n      </Button>\n      <Button flex>\n        Subscribe\n      </Button>\n    </Buttons>\n  </Form>,\n  dom,\n)",example:{type:o,props:{vertical:!0},children:[{type:r,props:{element:l,name:"address",label:"Address"},children:[{type:i,props:{icon:"plus"}},"Add an address"]},{type:s,children:[{type:d,props:{view:"secondary",flex:!0,type:"reset"},children:["Reset"]},{type:d,props:{flex:!0},children:["Subscribe"]}]}]}});var u=e({id:"required",title:"required",description:"You can make required `Set` by `requiredSet` property.\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\nimport { ValidationError, ValidationErrors } from '@cantinc/utils'\n\nimport {\n  Form,\n  FormSet,\n  Button,\n  Buttons,\n  FormInput,\n  FormInputProps,\n  Notifications,\n  Icon,\n} from '@cantinc/ui'\n\nconst handleInvalid = (error: ValidationError<any>) => {\n  if (error.error === ValidationErrors.required) {\n    notify(`The field of ${error.data.key} is required.`)\n  }\n}\n\ninnet(\n  <>\n    <Form oninvalid={handleInvalid} vertical>\n      <FormSet<FormInputProps>\n        required\n        requiredSet\n        element={FormInput}\n        name='address'\n        label='Address'>\n        <Icon icon='plus' />\n        Add an address\n      </FormSet>\n      <Buttons>\n        <Button view='secondary' flex type='reset'>\n          Reset\n        </Button>\n        <Button flex>\n          Subscribe\n        </Button>\n      </Buttons>\n    </Form>\n    <Notifications />\n  </>,\n  dom,\n)",example:{type:o,props:{oninvalid:e=>{e.error===p.required&&a(`The field of ${e.data.key} is required.`)},vertical:!0},children:[{type:r,props:{required:!0,requiredSet:!0,element:l,name:"address",label:"Address"},children:[{type:i,props:{icon:"plus"}},"Add an address"]},{type:s,children:[{type:d,props:{view:"secondary",flex:!0,type:"reset"},children:["Reset"]},{type:d,props:{flex:!0},children:["Subscribe"]}]}]}}),c=e({id:"upload",title:"upload",description:"You can make required `Set` by `requiredSet` property.\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport {\n  Form,\n  FormSet,\n  Button,\n  Buttons,\n  Icon,\n  FormUploadProps,\n  FormUpload,\n} from '@cantinc/ui'\n\ninnet(\n  <Form vertical>\n    <FormSet<FormUploadProps>\n      element={FormUpload}\n      required\n      requiredSet\n      name='files'\n      label='File'>\n      <Icon icon='plus' />\n      Add a file\n    </FormSet>\n    <Buttons>\n      <Button view='secondary' flex type='reset'>\n        Reset\n      </Button>\n      <Button flex>\n        Submit\n      </Button>\n    </Buttons>\n  </Form>,\n  dom,\n)",example:{type:o,props:{vertical:!0},children:[{type:r,props:{element:t,required:!0,requiredSet:!0,name:"files",label:"File"},children:[{type:i,props:{icon:"plus"}},"Add a file"]},{type:s,children:[{type:d,props:{view:"secondary",flex:!0,type:"reset"},children:["Reset"]},{type:d,props:{flex:!0},children:["Submit"]}]}]}}),f=[m,e({id:"values",title:"values",description:"You can use `defaultValues` to add default values.\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport {\n  Form,\n  FormSet,\n  Button,\n  Buttons,\n  FormInput,\n  FormInputProps,\n} from '@cantinc/ui'\n\ninnet(\n  <Form vertical>\n    <FormSet<FormInputProps>\n      defaultValues={[{ defaultValue: 'Address 1' }, { defaultValue: 'Address 2' }]}\n      element={FormInput}\n      name='address'\n      label='Address'>\n      <Icon icon='plus' />\n      Add an address\n    </FormSet>\n    <Buttons>\n      <Button view='secondary' flex type='reset'>\n        Reset\n      </Button>\n      <Button flex>\n        Subscribe\n      </Button>\n    </Buttons>\n  </Form>,\n  dom,\n)",example:{type:o,props:{vertical:!0},children:[{type:r,props:{defaultValues:[{defaultValue:"Address 1"},{defaultValue:"Address 2"}],element:l,name:"address",label:"Address"},children:[{type:i,props:{icon:"plus"}},"Add an address"]},{type:s,children:[{type:d,props:{view:"secondary",flex:!0,type:"reset"},children:["Reset"]},{type:d,props:{flex:!0},children:["Subscribe"]}]}]}}),u,c],y=()=>({type:n,props:{component:r,name:"FormSet",description:"# FormSet\n\nUse this component to add a set of form elements.\n\n```typescript\nimport { FormSet } from '@cantinc/ui'\n```\n",examples:f}});export{y as default};
