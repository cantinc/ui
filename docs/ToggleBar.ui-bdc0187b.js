import{e,C as l}from"./Component-d6910b8d.js";import{T as n}from"./ToggleBar-ed46b107.js";import{S as a,F as t,B as o}from"./docs-9c5485ea.js";import{I as u}from"./Input-1a0d9d5e.js";import"./Typography-794137ee.js";var i=e({id:"default",title:"ToggleBar",description:"By default, selected value is an empty string.\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { ToggleBar, ToggleBarValue } from '@cantinc/ui'\n\nconst values: ToggleBarValue[] = [\n  { value: 'on' },\n  { value: '', label: 'auto' },\n  { value: 'off' },\n]\n\ninnet(\n  <ToggleBar values={values} />,\n  dom,\n)",example:{type:n,props:{values:[{value:"on"},{value:"",label:"auto"},{value:"off"}]}}});var s=e({id:"icons",title:"icons",description:"`ToggleBar` items has icons.\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { ToggleBar, ToggleBarValue } from '@cantinc/ui'\n\nconst values: ToggleBarValue[] = [\n  { value: '', label: 'Home', icon: 'default' },\n  { value: 'settings', label: 'Settings', icon: 'cross' },\n  { value: 'help', label: 'Edit', icon: 'edit' },\n]\n\ninnet(\n  <ToggleBar padding={[24, 0]} values={values} />,\n  dom,\n)",example:{type:n,props:{padding:[24,0],values:[{value:"",label:"Home",icon:"default"},{value:"settings",label:"Settings",icon:"cross"},{value:"help",label:"Edit",icon:"edit"}]}}});var v=e({id:"padding",title:"padding",description:"`ToggleBar` extends [padding](/layout/flex#padding) property of Flex.\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { ToggleBar, ToggleBarValue } from '@cantinc/ui'\n\nconst values: ToggleBarValue[] = [\n  { value: '', label: 'Home' },\n  { value: 'settings', label: 'Settings' },\n  { value: 'help', label: 'Help' },\n]\n\ninnet(\n  <ToggleBar padding={[8, 0]} values={values} />,\n  dom,\n)",example:{type:n,props:{padding:[8,0],values:[{value:"",label:"Home"},{value:"settings",label:"Settings"},{value:"help",label:"Help"}]}}});const p=new a("");var r=e({id:"value",title:"value",description:"Use value to bind state.\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\nimport { State } from 'watch-state'\n\nimport { Input, ToggleBar, ToggleBarValue } from '@cantinc/ui'\n\nconst value = new State('')\nconst values: ToggleBarValue[] = [\n  { value: '', label: 'Home' },\n  { value: 'settings', label: 'Settings' },\n  { value: 'help', label: 'Help' },\n]\n\ninnet(\n  <>\n    <Input value={value} label='Value' />\n    <ToggleBar value={value} values={values} />\n  </>,\n  dom,\n)",example:[{type:u,props:{value:p,label:"Value"}},{type:n,props:{value:p,values:[{value:"",label:"Home"},{value:"settings",label:"Settings"},{value:"help",label:"Help"}]}}]});const g=new a(""),d=new a(""),m=new a([{value:"",label:"Home"},{value:"settings",label:"Settings"},{value:"help",label:"Help"}]);var c=[i,v,s,r,e({id:"values",title:"Dynamic values",description:"Use values to bind state.\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\nimport { State } from 'watch-state'\n\nimport { Input, ToggleBar, ToggleBarValue } from '@cantinc/ui'\n\nconst value = new State('')\nconst label = new State('')\n\nconst values = new State<ToggleBarValue[]>([\n  { value: '', label: 'Home' },\n  { value: 'settings', label: 'Settings' },\n  { value: 'help', label: 'Help' },\n])\n\nconst add = () => {\n  if (!values.value.find(({ value: val }) => value.value === val)) {\n    values.value.push({ value: value.value, label: label.value })\n    values.update()\n  }\n}\n\nconst remove = () => {\n  const removeValue = value.value\n  value.value = ''\n  label.value = ''\n  values.value = values.value.filter(({ value }) => value !== removeValue)\n}\n\ninnet(\n  <>\n    <Flex justify='center' padding={8} wrap gap={16}>\n      <Input flex value={value} label='Value' />\n      <Input flex value={label} label='Label' />\n      <Button onclick={add}>\n        Add\n      </Button>\n      <Button view='negative' onclick={remove}>\n        Delete\n      </Button>\n    </Flex>\n    <ToggleBar value={value} values={values} />\n  </>,\n  dom,\n)",example:[{type:t,props:{justify:"center",padding:8,wrap:!0,gap:16},children:[{type:u,props:{flex:!0,value:g,label:"Value"}},{type:u,props:{flex:!0,value:d,label:"Label"}},{type:o,props:{onclick:()=>{m.value.find((({value:e})=>g.value===e))||(m.value.push({value:g.value,label:d.value}),m.update())}},children:["Add"]},{type:o,props:{view:"negative",onclick:()=>{const e=g.value;g.value="",d.value="",m.value=m.value.filter((({value:l})=>l!==e))}},children:["Delete"]}]},{type:n,props:{value:g,values:m}}]})],b=()=>({type:l,props:{component:n,name:"ToggleBar",description:"# ToggleBar\n\nUse this component to switch between values\n\n```typescript\nimport { ToggleBar } from '@cantinc/ui'\n```\n",examples:c}});export{b as default};
