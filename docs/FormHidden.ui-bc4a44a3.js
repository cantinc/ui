import{e,C as n}from"./Component-ec9d7f3f.js";import{ag as t,R as o,S as a,o as r,G as s,a2 as i,a as m,af as d,K as f}from"./docs-51e86308.js";import{u as c}from"./unwatch.es6-e715765e.js";import{B as u}from"./Button-26a4efb0.js";import"./Typography-6d7787f2.js";function p({name:e,value:n}){const d=t();if(!d)return;const f=c((()=>m(n))),u=function(e){if(e instanceof a)return e;if(e instanceof s||"function"==typeof e){const n=new a;return new i((()=>{n.value=m(e)})),n}return new a(e)}(n),p={name:e,defaultValue:f,element:new o,state:u,error:new a("")};d.fields.add(p),r((()=>{d.destroyed||d.fields.delete(p)}))}var l=[e({id:"default",title:"Default",description:"This example shows a form with submit button and the hidden field.\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport {\n  Form,\n  FormHidden,\n  Button,\n  Notifications,\n  notify,\n  createFormDate,\n} from '@cantinc/ui'\n\nconst handleSuccess = (form: FormContext) => {\n  notify(`User: ${createFormDate(form, 'POST').get('user')}`)\n}\n\ninnet(\n  <>\n    <Form onsuccess={handleSuccess} vertical>\n      <FormHidden name='user' value='1' />\n      <Button view='negative'>\n        Delete\n      </Button>\n    </Form>\n    <Notifications />\n  </>,\n  dom,\n)",example:{type:d,props:{onsuccess:e=>{f(`User: ${function(e,n){const t=new FormData;for(const o of e.fields)"PATCH"===n&&o.defaultValue===o.state.value||t.append(o.name,o.state.value);return t}(e,"POST").get("user")}`)},vertical:!0},children:[{type:p,props:{name:"user",value:"1"}},{type:u,props:{view:"negative"},children:["Delete"]}]}})],h=()=>({type:n,props:{component:p,name:"FormInput",description:"# FormHidden\n\nUse this component to add hidden form field.\n\n```typescript\nimport { FormHidden } from '@cantinc/ui'\n```\n",examples:l}});export{h as default};
