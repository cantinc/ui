import{e as n,A as e,C as i}from"./Component-ca562454.js";import{F as o,q as t,S as r}from"./docs-7a62fae0.js";import"./Typography-b332e720.js";var c=n({id:"default",title:"Default",description:"By default, shows arrow down icon.\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { Arrow } from '@cantinc/ui'\n\ninnet(\n  <Arrow />,\n  dom,\n)",example:{type:e}});const a=new r("top");var l=n({id:"direction",title:"direction",description:"By default, shows arrow down icon.\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\nimport { State } from 'watch-state'\n\nimport { Arrow, ArrowDirection, Flex, Radiobox, RadioItem } from '@cantinc/ui'\n\nconst values: RadioItem[] = [\n  { value: 'top', label: 'top' },\n  { value: 'down', label: 'down' },\n  { value: 'left', label: 'left' },\n  { value: 'right', label: 'right' },\n]\nconst direction = new State<ArrowDirection>('top')\n\ninnet(\n  <Flex wrap gap={16}>\n    <Arrow direction={direction} />\n    <Radiobox\n      value={direction}\n      values={values}\n    />\n  </Flex>,\n  dom,\n)",example:{type:o,props:{wrap:!0,gap:16},children:[{type:e,props:{direction:a}},{type:t,props:{flex:!0,wrap:!0,value:a,values:[{value:"top",label:"top"},{value:"down",label:"down"},{value:"right",label:"right"},{value:"left",label:"left"}]}}]}});const p=["right","down","top","left"],d=new r("top"),s=new r("top"),w=new r("top"),m=new r("top"),u=new r("top"),f=new r("top"),A=n=>()=>{const e=p.indexOf(n.value);e!==p.length-1?n.value=p[e+1]:n.value=p[0]};var v=[c,l,n({id:"size",title:"size",description:"You can set icon `size`.\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\nimport { State } from 'watch-state'\n\nimport { Arrow, ArrowDirection, Flex } from '@cantinc/ui'\n\nconst directions: ArrowDirection[] = ['right', 'down', 'top', 'left']\n\nconst direction1 = new State<ArrowDirection>('top')\nconst direction2 = new State<ArrowDirection>('top')\nconst direction3 = new State<ArrowDirection>('top')\nconst direction4 = new State<ArrowDirection>('top')\nconst direction5 = new State<ArrowDirection>('top')\nconst direction6 = new State<ArrowDirection>('top')\n\nconst handleClick = (state: State<ArrowDirection>) => () => {\n  const index = directions.indexOf(state.value)\n\n  if (index === directions.length - 1) {\n    state.value = directions[0]\n    return\n  }\n\n  state.value = directions[index + 1]\n}\n\ninnet(\n  <Flex gap={16} vertical>\n    <Flex align='center' gap={16} wrap>\n      <Arrow\n        onclick={handleClick(direction1)}\n        direction={direction1}\n        size={256}\n      />\n      <Arrow\n        onclick={handleClick(direction2)}\n        direction={direction2}\n        size={128}\n      />\n      <Arrow\n        onclick={handleClick(direction3)}\n        direction={direction3}\n        size={64}\n      />\n      <Arrow\n        onclick={handleClick(direction4)}\n        direction={direction4}\n        size={32}\n      />\n      <Arrow\n        onclick={handleClick(direction5)}\n        direction={direction5}\n        size={18}\n      />\n      <Arrow\n        onclick={handleClick(direction6)}\n        direction={direction6}\n        size={12}\n      />\n    </Flex>\n  </Flex>,\n  dom,\n)",example:{type:o,props:{gap:16,vertical:!0},children:[{type:o,props:{align:"center",gap:16,wrap:!0},children:[{type:e,props:{onclick:A(d),direction:d,size:256}},{type:e,props:{onclick:A(s),direction:s,size:128}},{type:e,props:{onclick:A(w),direction:w,size:64}},{type:e,props:{onclick:A(m),direction:m,size:32}},{type:e,props:{onclick:A(u),direction:u,size:18}},{type:e,props:{onclick:A(f),direction:f,size:12}}]}]}})],h=()=>({type:i,props:{component:e,name:"Arrow",description:"# Arrow\n\nUse this component to add arrow icon.\n\n```typescript\nimport { Arrow } from '@cantinc/ui'\n```\n\n## Extend\n\n- [Selector](/interaction/selector)\n",examples:v}});export{h as default};
