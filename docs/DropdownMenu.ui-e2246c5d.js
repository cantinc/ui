import{e as n,A as e,C as o}from"./Component-ec9d7f3f.js";import{D as t}from"./DropdownMenu-3242f13f.js";import{a,S as l,R as s}from"./docs-51e86308.js";import{B as r}from"./Button-26a4efb0.js";import{M as p,a as i}from"./Modal-f87c8366.js";import"./Typography-6d7787f2.js";import"./Dropdown-ef8329c2.js";import"./Icon-50732575.js";const u=new l(!1),d=new s,c=()=>{u.value=!1};var m=n({id:"default",title:"Default",description:"You can bind state on focus and click.\n",code:"import innet from 'innet'\nimport dom, { Ref, use } from '@innet/dom'\nimport { State } from 'watch-state'\n\nimport { Arrow, Button, DropdownMenu, MenuOption } from '@cantinc/ui'\n\nconst state = new State(false)\nconst button = new Ref<HTMLButtonElement>()\n\nconst toggle = () => {\n  state.value = !state.value\n}\nconst hide = () => {\n  state.value = false\n}\nconst values: MenuOption[] = [\n  { value: '1', label: 'Test 1' },\n  { value: '2', label: 'Test 2' },\n  { value: '3', label: 'Test 3' },\n]\n\ninnet(\n  <>\n    <Button\n      padding={8}\n      gap={8}\n      onclick={toggle}\n      onblur={hide}\n      ref={button}>\n      Click Me\n      <Arrow\n        color='var(--color-100)'\n        direction={() => use(state) ? 'top' : 'down'}\n      />\n    </Button>\n    <DropdownMenu\n      onSelect={hide}\n      values={values}\n      show={state}\n      element={button}>\n      Test\n    </DropdownMenu>\n  </>,\n  dom,\n)",example:[{type:r,props:{padding:8,gap:8,onclick:()=>{u.value=!u.value},onblur:c,ref:d},children:["Click Me",{type:e,props:{color:"var(--color-100)",direction:()=>a(u)?"top":"down"}}]},{type:t,props:{onSelect:c,values:[{value:"1",label:"Test 1"},{value:"2",label:"Test 2"},{value:"3",label:"Test 3"}],show:u,element:d}}]});const f=new l(!1),w=new l(!1),v=new s,M=()=>{f.value=!1};var h=[m,n({id:"default",title:"Default",description:"Dropdown in a modal.\n",code:"import innet from 'innet'\nimport dom, { Ref, use } from '@innet/dom'\nimport { State } from 'watch-state'\n\nimport { Arrow, Button, DropdownMenu, MenuOption, Modals, Modal } from '@cantinc/ui'\n\nconst state = new State(false)\nconst modalState = new State(false)\nconst button = new Ref<HTMLButtonElement>()\n\nconst toggle = () => {\n  state.value = !state.value\n}\nconst hide = () => {\n  state.value = false\n}\nconst showModal = () => {\n  modalState.value = true\n}\nconst hideModal = () => {\n  modalState.value = false\n}\n\nconst values: MenuOption[] = [\n  { value: '1', label: 'Test 1' },\n  { value: '2', label: 'Test 2' },\n  { value: '3', label: 'Test 3' },\n]\n\ninnet(\n  <>\n    <Button onclick={showModal}>\n      Click Me\n    </Button>\n    <portal parent={document.body}>\n      <Modals>\n        <show state={modalState}>\n          <Modal headButtons={[]} onclose={hideModal}>\n            <Button\n              padding={8}\n              gap={8}\n              onclick={toggle}\n              onblur={hide}\n              ref={button}>\n              Click Me\n              <Arrow\n                color='var(--color-100)'\n                direction={() => use(state) ? 'top' : 'down'}\n              />\n            </Button>\n            <DropdownMenu\n              onSelect={hide}\n              values={values}\n              show={state}\n              element={button}\n            />\n          </Modal>\n        </show>\n      </Modals>\n    </portal>\n  </>,\n  dom,\n)",example:[{type:r,props:{onclick:()=>{w.value=!0}},children:["Click Me"]},{type:"portal",props:{parent:document.body},children:[{type:p,children:[{type:"show",props:{state:w},children:[{type:i,props:{headButtons:[],onclose:()=>{w.value=!1}},children:[{type:r,props:{padding:8,gap:8,onclick:()=>{f.value=!f.value},onblur:M,ref:v},children:["Click Me",{type:e,props:{color:"var(--color-100)",direction:()=>a(f)?"top":"down"}}]},{type:t,props:{onSelect:M,values:[{value:"1",label:"Test 1"},{value:"2",label:"Test 2"},{value:"3",label:"Test 3"}],show:f,element:v}}]}]}]}]}]})],b=()=>({type:o,props:{component:t,name:"DropdownMenu",description:"# DropdownMenu\n\nThis component show a popup for an HTML element.\n\n```typescript\nimport { DropdownMenu } from '@cantinc/ui'\n```\n\n## Extends\n\n- [Dropdown](/popups/dropdown)\n\n## Extend\n\n- [Selector](/interaction/selector)\n",examples:h}});export{b as default};
