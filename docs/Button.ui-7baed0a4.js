import{e as n,C as t}from"./Component-eb7a8d8b.js";import{B as o}from"./Button-6194a2d2.js";import{K as e,F as i,S as p}from"./docs-b4e7cdfe.js";import"./Typography-17ea63b2.js";var r=n({id:"click",title:"Clickable",description:"Use `onclick` prop to react on click\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { Button, notify } from '@cantinc/ui'\n\ninnet(\n  <Button\n    onclick={() => notify('clicked')}>\n    Click Me\n  </Button>,\n  dom,\n)",example:{type:o,props:{onclick:()=>e("clicked")},children:["Click Me"]}}),a=n({id:"default",title:"Default",description:"By default, do nothing on click\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { Button } from '@cantinc/ui'\n\ninnet(\n  <Button>Click Me</Button>,\n  dom,\n)",example:{type:o,children:["Click Me"]}}),c=n({id:"flex",title:"Flex",description:"If you want to stretch a button use `flex` prop.\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { Flex, Button } from '@cantinc/ui'\n\ninnet(\n  <Flex wrap gap={16}>\n    <Button flex>Flex</Button>\n    <Button view='secondary'>Usual</Button>\n  </Flex>,\n  dom,\n)",example:{type:i,props:{wrap:!0,gap:16},children:[{type:o,props:{flex:!0},children:["Flex"]},{type:o,props:{view:"secondary"},children:["Usual"]}]}}),d=n({id:"link",title:"link",description:"Add `link` prop if you want to use a button as a link.\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { Button } from '@cantinc/ui'\n\ninnet(\n  <Button link href='/'>\n    Go to home page\n  </Button>,\n  dom,\n)",example:{type:o,props:{link:!0,href:"/"},children:["Go to home page"]}});const l=new p(!1);var m=n({id:"loading",title:"Loading",description:"By default, do nothing on click\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\nimport { State } from 'watch-state'\n\nimport { Flex, Button, notify } from '@cantinc/ui'\n\nconst loading = new State(false)\n\ninnet(\n  <Flex wrap gap={8}>\n    <Button onclick={() => { loading.value = !loading.value }}>\n      Click Me\n    </Button>\n    <Button\n      view='secondary'\n      size='small'\n      loading={loading}\n      onclick={() => notify('clicked')}>\n      Some button\n    </Button>\n  </Flex>,\n  dom,\n)",example:{type:i,props:{wrap:!0,gap:8},children:[{type:o,props:{onclick:()=>{l.value=!l.value}},children:["Click Me"]},{type:o,props:{view:"secondary",padding:[16,24],loading:l,onclick:()=>e("clicked")},children:["Some button"]}]}}),u=n({id:"padding",title:"padding",description:"The component extends `padding` prop of [Flex](/layout/flex#padding).\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { Button } from '@cantinc/ui'\n\ninnet(\n  <Button padding={[16, 24]}>\n    Click Me\n  </Button>,\n  dom,\n)",example:{type:o,props:{padding:[16,24]},children:["Click Me"]}}),s=[a,r,n({id:"view",title:"View",description:"You can change UI type of button by `view` prop.\n\nAvailable: `primary` | `secondary`\n\nBy default: `primary` \n\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { Flex, Button } from '@cantinc/ui'\n\ninnet(\n  <Flex gap={16} wrap>\n    <Button view='primary'>\n      Primary\n    </Button>\n    <Button view='secondary'>\n      Secondary\n    </Button>\n    <Button view='negative'>\n      Negative\n    </Button>\n    <Button view='positive'>\n      Positive\n    </Button>\n  </Flex>,\n  dom,\n)",example:{type:i,props:{gap:16,wrap:!0},children:[{type:o,props:{view:"primary"},children:["Primary"]},{type:o,props:{view:"secondary"},children:["Secondary"]},{type:o,props:{view:"negative"},children:["Negative"]},{type:o,props:{view:"positive"},children:["Positive"]}]}}),u,c,m,d],f=()=>({type:t,props:{component:o,name:"Button",description:"# Button\n\nThis component reacts on click.\n\n```typescript\nimport { Button } from '@cantinc/ui'\n```\n",examples:s}});export{f as default};
