import{e as n,C as e}from"./Component-d6910b8d.js";import{F as r}from"./docs-9c5485ea.js";import"./Typography-794137ee.js";const o=n=>[{type:"div",props:{style:{height:"48px",background:"var(--color-40)",padding:"12px"}},children:["align"]},{type:"div",props:{style:{background:"var(--color-60)",padding:"6px"}},children:[n]}];var d=n({id:"align",title:"align",description:"`align` controls position of children elements against direction, available: `center`, `start`, `end`, `stretch`, `baseline`\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { Flex } from '@cantinc/ui'\n\nconst content = (position: string) => (\n  <>\n    <div style={{\n      height: '48px',\n      background: 'var(--color-40)',\n      padding: '12px',\n    }}>\n      align\n    </div>\n    <div style={{\n      background: 'var(--color-60)',\n      padding: '6px',\n    }}>\n      {position}\n    </div>\n  </>\n)\n\ninnet(\n  <Flex\n    wrap\n    gap={16}\n    style={{\n      background: 'var(--color-80)',\n    }}>\n    <Flex align='center'>\n      {content('center')}\n    </Flex>\n    <Flex align='start'>\n      {content('start')}\n    </Flex>\n    <Flex align='end'>\n      {content('end')}\n    </Flex>\n    <Flex align='stretch'>\n      {content('stretch')}\n    </Flex>\n    <Flex align='baseline'>\n      {content('baseline')}\n    </Flex>\n  </Flex>,\n  dom,\n)",example:{type:r,props:{wrap:!0,gap:16,style:{background:"var(--color-80)"}},children:[{type:r,props:{align:"center"},children:[o("center")]},{type:r,props:{align:"start"},children:[o("start")]},{type:r,props:{align:"end"},children:[o("end")]},{type:r,props:{align:"stretch"},children:[o("stretch")]},{type:r,props:{align:"baseline"},children:[o("baseline")]}]}}),i=n({id:"default",title:"Default",description:"Elements which inside `Flex` are placed horizontal by default.\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { Flex } from '@cantinc/ui'\n\ninnet(\n  <Flex style={{ background: 'var(--color-80)' }}>\n    <div style={{ background: 'var(--color-40)', padding: '10px' }}>\n      Left\n    </div>\n    <div style={{ background: 'var(--color-60)', padding: '10px' }}>\n      Right\n    </div>\n  </Flex>,\n  dom,\n)",example:{type:r,props:{style:{background:"var(--color-80)"}},children:[{type:"div",props:{style:{background:"var(--color-40)",padding:"10px"}},children:["Left"]},{type:"div",props:{style:{background:"var(--color-60)",padding:"10px"}},children:["Right"]}]}}),t=n({id:"differentGap",title:"Different gap",description:"You can set different `gap` for vertical and horizontal.\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { Flex } from '@cantinc/ui'\n\ninnet(\n  <Flex wrap gap={[16, 32]} style={{ background: 'var(--color-80)', width: '100px' }}>\n    <div style={{ background: 'var(--color-20)', padding: '10px' }}>1</div>\n    <div style={{ background: 'var(--color-40)', padding: '10px' }}>2</div>\n    <div style={{ background: 'var(--color-60)', padding: '10px' }}>3</div>\n  </Flex>,\n  dom,\n)",example:{type:r,props:{wrap:!0,gap:[16,32],style:{background:"var(--color-80)",width:"100px"}},children:[{type:"div",props:{style:{background:"var(--color-20)",padding:"10px"}},children:["1"]},{type:"div",props:{style:{background:"var(--color-40)",padding:"10px"}},children:["2"]},{type:"div",props:{style:{background:"var(--color-60)",padding:"10px"}},children:["3"]}]}}),l=n({id:"element",title:"element",description:"You can use `element` to change HTML element of `Flex`\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { Flex } from '@cantinc/ui'\n\ninnet(\n  <Flex<HTMLAnchorElement> element='a' href='/'>\n    Home Page\n  </Flex>,\n  dom,\n)",example:{type:r,props:{element:"a",href:"/"},children:["Home Page"]}}),a=n({id:"flex",title:"Flex",description:"Use `flex` to stretch the element\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { Flex } from '@cantinc/ui'\n\ninnet(\n  <Flex>\n    <Flex\n      flex={2}\n      padding={10}\n      style={{ background: 'var(--color-80)' }}>\n      66%\n    </Flex>\n    <Flex\n      flex\n      padding={10}\n      style={{ background: 'var(--color-60)' }}>\n      33%\n    </Flex>\n  </Flex>,\n  dom,\n)",example:{type:r,children:[{type:r,props:{flex:2,padding:10,style:{background:"var(--color-80)"}},children:["66%"]},{type:r,props:{flex:!0,padding:10,style:{background:"var(--color-60)"}},children:["33%"]}]}}),p=n({id:"gap",title:"gap",description:"Use the `gap` prop to add gap between elements.\n\nAvailable: `number` | `[number, number]`\n\nBy default: `undefined`\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { Flex } from '@cantinc/ui'\n\ninnet(\n  <Flex gap={16} style={{ background: 'var(--color-80)' }}>\n    <div style={{ background: 'var(--color-20)', padding: '10px' }}>\n      First\n    </div>\n    <div style={{ background: 'var(--color-40)', padding: '10px' }}>\n      Second\n    </div>\n    <div style={{ background: 'var(--color-60)', padding: '10px' }}>\n      Third\n    </div>\n  </Flex>,\n  dom,\n)",example:{type:r,props:{gap:16,style:{background:"var(--color-80)"}},children:[{type:"div",props:{style:{background:"var(--color-20)",padding:"10px"}},children:["First"]},{type:"div",props:{style:{background:"var(--color-40)",padding:"10px"}},children:["Second"]},{type:"div",props:{style:{background:"var(--color-60)",padding:"10px"}},children:["Third"]}]}}),c=n({id:"inline",title:"inline",description:"`inline` prop makes `Flex` inline.\n\nAvailable: `true` | `false`\n\nBy default: `false`\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { Flex } from '@cantinc/ui'\n\ninnet(\n  <Flex inline padding={16} style={{ background: 'var(--color-80)' }}>\n    <div style={{ background: 'var(--color-40)', padding: '10px' }}>\n      Left\n    </div>\n    <div style={{ background: 'var(--color-60)', padding: '10px' }}>\n      Right\n    </div>\n  </Flex>,\n  dom,\n)",example:{type:r,props:{inline:!0,padding:16,style:{background:"var(--color-80)"}},children:[{type:"div",props:{style:{background:"var(--color-40)",padding:"10px"}},children:["Left"]},{type:"div",props:{style:{background:"var(--color-60)",padding:"10px"}},children:["Right"]}]}}),s=n({id:"justify",title:"justify",description:"`justify` controls position of children by direction, available: `start`, `end`, `center`, `between`, `around` and `stretch`\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { Flex } from '@cantinc/ui'\n\ninnet(\n  <Flex wrap gap={16}>\n    <Flex flex justify='start' style={{ background: 'var(--color-80)', 'min-width': '200px' }}>\n      <div style={{ background: 'var(--color-40)', padding: '12px' }}>justify</div>\n      <div style={{ background: 'var(--color-60)', padding: '12px' }}>start</div>\n    </Flex>\n    <Flex flex justify='end' style={{ background: 'var(--color-80)', 'min-width': '200px' }}>\n      <div style={{ background: 'var(--color-40)', padding: '12px' }}>justify</div>\n      <div style={{ background: 'var(--color-60)', padding: '12px' }}>end</div>\n    </Flex>\n    <Flex flex justify='center' style={{ background: 'var(--color-80)', 'min-width': '200px' }}>\n      <div style={{ background: 'var(--color-40)', padding: '12px' }}>justify</div>\n      <div style={{ background: 'var(--color-60)', padding: '12px' }}>center</div>\n    </Flex>\n    <Flex flex justify='between' style={{ background: 'var(--color-80)', 'min-width': '200px' }}>\n      <div style={{ background: 'var(--color-40)', padding: '12px' }}>justify</div>\n      <div style={{ background: 'var(--color-60)', padding: '12px' }}>between</div>\n    </Flex>\n    <Flex flex justify='around' style={{ background: 'var(--color-80)', 'min-width': '200px' }}>\n      <div style={{ background: 'var(--color-40)', padding: '12px' }}>justify</div>\n      <div style={{ background: 'var(--color-60)', padding: '12px' }}>around</div>\n    </Flex>\n  </Flex>,\n  dom,\n)",example:{type:r,props:{wrap:!0,gap:16},children:[{type:r,props:{flex:!0,justify:"start",style:{background:"var(--color-80)","min-width":"200px"}},children:[{type:"div",props:{style:{background:"var(--color-40)",padding:"12px"}},children:["justify"]},{type:"div",props:{style:{background:"var(--color-60)",padding:"12px"}},children:["start"]}]},{type:r,props:{flex:!0,justify:"end",style:{background:"var(--color-80)","min-width":"200px"}},children:[{type:"div",props:{style:{background:"var(--color-40)",padding:"12px"}},children:["justify"]},{type:"div",props:{style:{background:"var(--color-60)",padding:"12px"}},children:["end"]}]},{type:r,props:{flex:!0,justify:"center",style:{background:"var(--color-80)","min-width":"200px"}},children:[{type:"div",props:{style:{background:"var(--color-40)",padding:"12px"}},children:["justify"]},{type:"div",props:{style:{background:"var(--color-60)",padding:"12px"}},children:["center"]}]},{type:r,props:{flex:!0,justify:"between",style:{background:"var(--color-80)","min-width":"200px"}},children:[{type:"div",props:{style:{background:"var(--color-40)",padding:"12px"}},children:["justify"]},{type:"div",props:{style:{background:"var(--color-60)",padding:"12px"}},children:["between"]}]},{type:r,props:{flex:!0,justify:"around",style:{background:"var(--color-80)","min-width":"200px"}},children:[{type:"div",props:{style:{background:"var(--color-40)",padding:"12px"}},children:["justify"]},{type:"div",props:{style:{background:"var(--color-60)",padding:"12px"}},children:["around"]}]}]}}),g=n({id:"padding",title:"padding",description:"`padding` prop adds padding inside.\n\nAvailable: `number` | `[number, number]` | `[number, number, number]` | `[number, number, number]`\n\nBy default: `undefined`\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { Flex } from '@cantinc/ui'\n\ninnet(\n  <Flex vertical style={{ color: 'var(--color-100)' }}>\n    <Flex padding={16} style={{ background: 'var(--color-90)' }}>\n      <div style={{ background: 'var(--color-20)', padding: '10px' }}>16</div>\n    </Flex>\n    <Flex padding={[16, 32]} style={{ background: 'var(--color-80)' }}>\n      <div style={{ background: 'var(--color-20)', padding: '10px' }}>[16, 32]</div>\n    </Flex>\n    <Flex padding={[8, 16, 32]} style={{ background: 'var(--color-70)' }}>\n      <div style={{ background: 'var(--color-20)', padding: '10px' }}>[8, 16, 32]</div>\n    </Flex>\n    <Flex padding={[0, 8, 16, 32]} style={{ background: 'var(--color-60)' }}>\n      <div style={{ background: 'var(--color-20)', padding: '10px' }}>[0, 8, 16, 32]</div>\n    </Flex>\n  </Flex>,\n  dom,\n)",example:{type:r,props:{vertical:!0,style:{color:"var(--color-100)"}},children:[{type:r,props:{padding:16,style:{background:"var(--color-90)"}},children:[{type:"div",props:{style:{background:"var(--color-20)",padding:"10px"}},children:["16"]}]},{type:r,props:{padding:[16,32],style:{background:"var(--color-80)"}},children:[{type:"div",props:{style:{background:"var(--color-20)",padding:"10px"}},children:["[16, 32]"]}]},{type:r,props:{padding:[8,16,32],style:{background:"var(--color-70)"}},children:[{type:"div",props:{style:{background:"var(--color-20)",padding:"10px"}},children:["[8, 16, 32]"]}]},{type:r,props:{padding:[0,8,16,32],style:{background:"var(--color-60)"}},children:[{type:"div",props:{style:{background:"var(--color-20)",padding:"10px"}},children:["[0, 8, 16, 32]"]}]}]}}),v=n({id:"reverse",title:"reverse",description:"Use `reverse` if you want to order elements from end to start.\n\nAvailable: `true` | `false`\n\nBy default: `false`\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { Flex } from '@cantinc/ui'\n\ninnet(\n  <Flex reverse style={{ background: 'var(--color-80)' }}>\n    <div style={{ background: 'var(--color-20)', padding: '10px' }}>First</div>\n    <div style={{ background: 'var(--color-40)', padding: '10px' }}>Second</div>\n    <div style={{ background: 'var(--color-60)', padding: '10px' }}>Third</div>\n  </Flex>,\n  dom,\n)",example:{type:r,props:{reverse:!0,style:{background:"var(--color-80)"}},children:[{type:"div",props:{style:{background:"var(--color-20)",padding:"10px"}},children:["First"]},{type:"div",props:{style:{background:"var(--color-40)",padding:"10px"}},children:["Second"]},{type:"div",props:{style:{background:"var(--color-60)",padding:"10px"}},children:["Third"]}]}}),y=n({id:"vertical",title:"vertical",description:"Use the `vertical` prop to change orientation\n\nAvailable: `true` | `false`\n\nBy default: `false`\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { Flex } from '@cantinc/ui'\n\ninnet(\n  <Flex vertical style={{ background: 'var(--color-80)' }}>\n    <div style={{ background: 'var(--color-40)', padding: '10px' }}>Top</div>\n    <div style={{ background: 'var(--color-60)', padding: '10px' }}>Down</div>\n  </Flex>,\n  dom,\n)",example:{type:r,props:{vertical:!0,style:{background:"var(--color-80)"}},children:[{type:"div",props:{style:{background:"var(--color-40)",padding:"10px"}},children:["Top"]},{type:"div",props:{style:{background:"var(--color-60)",padding:"10px"}},children:["Down"]}]}}),x=n({id:"verticalAlign",title:"vertical & align",description:"If you add the `vertical` prop, children elements place by horizontal\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { Flex } from '@cantinc/ui'\n\ninnet(\n  <Flex wrap gap={16} style={{ background: 'var(--color-80)' }}>\n    <Flex vertical align='center'>\n      <div style={{ background: 'var(--color-40)', padding: '24px' }}>align</div>\n      <div style={{ background: 'var(--color-60)', padding: '6px' }}>center</div>\n    </Flex>\n    <Flex vertical align='start'>\n      <div style={{ background: 'var(--color-40)', padding: '24px' }}>align</div>\n      <div style={{ background: 'var(--color-60)', padding: '6px' }}>start</div>\n    </Flex>\n    <Flex vertical align='end'>\n      <div style={{ background: 'var(--color-40)', padding: '24px' }}>align</div>\n      <div style={{ background: 'var(--color-60)', padding: '6px' }}>end</div>\n    </Flex>\n    <Flex vertical align='stretch'>\n      <div style={{ background: 'var(--color-40)', padding: '24px' }}>align</div>\n      <div style={{ background: 'var(--color-60)', padding: '6px' }}>stretch</div>\n    </Flex>\n  </Flex>,\n  dom,\n)",example:{type:r,props:{wrap:!0,gap:16,style:{background:"var(--color-80)"}},children:[{type:r,props:{vertical:!0,align:"center"},children:[{type:"div",props:{style:{background:"var(--color-40)",padding:"24px"}},children:["align"]},{type:"div",props:{style:{background:"var(--color-60)",padding:"6px"}},children:["center"]}]},{type:r,props:{vertical:!0,align:"start"},children:[{type:"div",props:{style:{background:"var(--color-40)",padding:"24px"}},children:["align"]},{type:"div",props:{style:{background:"var(--color-60)",padding:"6px"}},children:["start"]}]},{type:r,props:{vertical:!0,align:"end"},children:[{type:"div",props:{style:{background:"var(--color-40)",padding:"24px"}},children:["align"]},{type:"div",props:{style:{background:"var(--color-60)",padding:"6px"}},children:["end"]}]},{type:r,props:{vertical:!0,align:"stretch"},children:[{type:"div",props:{style:{background:"var(--color-40)",padding:"24px"}},children:["align"]},{type:"div",props:{style:{background:"var(--color-60)",padding:"6px"}},children:["stretch"]}]}]}}),u=n({id:"verticalGap",title:"vertical & gap",description:"`gap` works with `vertical` as well\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { Flex } from '@cantinc/ui'\n\ninnet(\n  <Flex vertical gap={16} style={{ background: 'var(--color-80)' }}>\n    <div style={{ background: 'var(--color-20)', padding: '10px' }}>First</div>\n    <div style={{ background: 'var(--color-40)', padding: '10px' }}>Second</div>\n    <div style={{ background: 'var(--color-60)', padding: '10px' }}>Third</div>\n  </Flex>,\n  dom,\n)",example:{type:r,props:{vertical:!0,gap:16,style:{background:"var(--color-80)"}},children:[{type:"div",props:{style:{background:"var(--color-20)",padding:"10px"}},children:["First"]},{type:"div",props:{style:{background:"var(--color-40)",padding:"10px"}},children:["Second"]},{type:"div",props:{style:{background:"var(--color-60)",padding:"10px"}},children:["Third"]}]}}),m=[i,y,n({id:"wrap",title:"wrap",description:"The `wrap` property sets whether flex items are forced onto one line or can wrap onto multiple lines.\n\nAvailable: `true` | `false`\n\nBy default: `false`\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { Flex } from '@cantinc/ui'\n\ninnet(\n  <Flex wrap style={{ background: 'var(--color-80)', width: '150px' }}>\n    <div style={{ background: 'var(--color-20)', padding: '10px' }}>First</div>\n    <div style={{ background: 'var(--color-40)', padding: '10px' }}>Second</div>\n    <div style={{ background: 'var(--color-60)', padding: '10px' }}>Third</div>\n  </Flex>,\n  dom,\n)",example:{type:r,props:{wrap:!0,style:{background:"var(--color-80)",width:"150px"}},children:[{type:"div",props:{style:{background:"var(--color-20)",padding:"10px"}},children:["First"]},{type:"div",props:{style:{background:"var(--color-40)",padding:"10px"}},children:["Second"]},{type:"div",props:{style:{background:"var(--color-60)",padding:"10px"}},children:["Third"]}]}}),p,u,t,v,g,c,d,x,s,l,a],b=()=>({type:e,props:{component:r,name:"Flex",description:"# Flex\n\nThis component helps to control elements position inside,\nwas designed as a one-dimensional layout model,\nand as a method that could offer space distribution between items in an interface and powerful alignment capabilities.\n\n```typescript\nimport { Flex } from '@cantinc/ui'\n```\n\n## Dependents\n\n- [Input](/interaction/input)\n- [Card](/cards/card)\n- [Button](/buttons/button)\n- [Dots](/interaction/dots)\n- [Slides](/interaction/slides)\n",examples:m}});export{b as default};
