import{e,C as n}from"./Component-e48f854d.js";import{T as r}from"./TextArea-c056deeb.js";import{S as t,F as o}from"./docs-8f3430fd.js";import{I as i}from"./Icon-39921375.js";import{B as l}from"./Button-912f81e3.js";import"./Typography-31c2c0c4.js";import"./Input-6fe500eb.js";var a=e({id:"beforeAfter",title:"before & after",description:"By default, shows an input\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { TextArea, Icon } from '@cantinc/ui'\n\ninnet(\n  <TextArea\n    placeholder='Enter count'\n    gap={8}\n    inline>\n    <slot name='before'>\n      <Icon icon='minus' />\n    </slot>\n    <slot name='after'>\n      <Icon icon='plus' />\n    </slot>\n  </TextArea>,\n  dom,\n)",example:{type:r,props:{placeholder:"Enter count",gap:8,inline:!0},children:[{type:"slot",props:{name:"before"},children:[{type:i,props:{icon:"minus"}}]},{type:"slot",props:{name:"after"},children:[{type:i,props:{icon:"plus"}}]}]}}),p=e({id:"default",title:"Default",description:"By default, shows an input\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { TextArea } from '@cantinc/ui'\n\ninnet(\n  <TextArea />,\n  dom,\n)",example:{type:r}});const m=new t("");var s=e({id:"error",title:"error",description:"You can show an error with `error` slot.\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\nimport { State } from 'watch-state'\n\nimport { Flex, TextArea, Button } from '@cantinc/ui'\n\nconst error = new State('')\n\ninnet(\n  <Flex vertical>\n    <TextArea error />\n    <TextArea placeholder='Placeholder' error />\n    <TextArea label='Label' error />\n    <TextArea error>\n      <slot name='hint'>\n        Static error\n      </slot>\n    </TextArea>\n    <TextArea error={() => Boolean(error.value)}>\n      <slot name='hint'>\n        {() => error.value}\n      </slot>\n    </TextArea>\n    <Button onclick={() => {\n      error.value = error.value ? '' : 'Error message...'\n    }}>\n      Click Me\n    </Button>\n  </Flex>,\n  dom,\n)",example:{type:o,props:{vertical:!0},children:[{type:r,props:{error:!0}},{type:r,props:{placeholder:"Placeholder",error:!0}},{type:r,props:{label:"Label",error:!0}},{type:r,props:{error:!0},children:[{type:"slot",props:{name:"hint"},children:["Static error"]}]},{type:r,props:{error:()=>Boolean(m.value)},children:[{type:"slot",props:{name:"hint"},children:[()=>m.value]}]},{type:l,props:{onclick:()=>{m.value=m.value?"":"Error message..."}},children:["Click Me"]}]}});const c=new t("");var d=e({id:"hint",title:"hint",description:"You can show an error with `error` slot.\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\nimport { State } from 'watch-state'\n\nimport { Flex, TextArea, Button } from '@cantinc/ui'\n\nconst hint = new State('')\n\ninnet(\n  <Flex vertical>\n    <TextArea>\n      <slot name='hint'>\n        Static hint\n      </slot>\n    </TextArea>\n    <TextArea>\n      <slot name='hint'>\n        {() => hint.value}\n      </slot>\n    </TextArea>\n    <Button onclick={() => {\n      hint.value = hint.value ? '' : 'Hint message...'\n    }}>\n      Click Me\n    </Button>\n  </Flex>,\n  dom,\n)",example:{type:o,props:{vertical:!0},children:[{type:r,children:[{type:"slot",props:{name:"hint"},children:["Static hint"]}]},{type:r,children:[{type:"slot",props:{name:"hint"},children:[()=>c.value]}]},{type:l,props:{onclick:()=>{c.value=c.value?"":"Hint message..."}},children:["Click Me"]}]}});const x=new t("");var h=e({id:"hintError",title:"hint & error",description:"You can show an error with `error` slot.\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\nimport { State } from 'watch-state'\n\nimport { Flex, TextArea, Button } from '@cantinc/ui'\n\nconst error = new State('')\n\ninnet(\n  <Flex vertical>\n    <TextArea error={() => Boolean(error.value)}>\n      <slot name='hint'>\n        {() => error.value || 'Hint message...'}\n      </slot>\n    </TextArea>\n    <Button onclick={() => {\n      error.value = error.value ? '' : 'Error message...'\n    }}>\n      Click Me\n    </Button>\n  </Flex>,\n  dom,\n)",example:{type:o,props:{vertical:!0},children:[{type:r,props:{error:()=>Boolean(x.value)},children:[{type:"slot",props:{name:"hint"},children:[()=>x.value||"Hint message..."]}]},{type:l,props:{onclick:()=>{x.value=x.value?"":"Error message..."}},children:["Click Me"]}]}}),u=e({id:"inline",title:"inline",description:"`TextArea` extends `inline` property from [Flex](/layout/flex#inline)\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { TextArea } from '@cantinc/ui'\n\ninnet(\n  <TextArea inline />,\n  dom,\n)",example:{type:r,props:{inline:!0}}}),f=e({id:"label",title:"label",description:"`TextArea` extends `label` property from [Input](/interaction/input#label)\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { TextArea } from '@cantinc/ui'\n\ninnet(\n  <TextArea label='Label' />,\n  dom,\n)",example:{type:r,props:{label:"Label"}}}),y=e({id:"labelPlaceholder",title:"label & placeholder",description:"`TextArea` extends `label` property from [Input](/interaction/input#label)\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { TextArea } from '@cantinc/ui'\n\ninnet(\n  <TextArea\n    label='Label'\n    placeholder='Placeholder...'\n  />,\n  dom,\n)",example:{type:r,props:{label:"Label",placeholder:"Placeholder..."}}}),T=[p,u,e({id:"padding",title:"padding",description:"Use `padding` to change input padding. Extends from [Flex](/layout/flex#padding)\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { Flex, TextArea } from '@cantinc/ui'\n\ninnet(\n  <Flex gap={[0, 8]} wrap>\n    <TextArea\n      flex\n      padding={[0, 8]}\n      placeholder='Placeholder...'\n    />\n    <TextArea\n      flex\n      padding={[14, 16, 4]}\n      label='Label...'\n    />\n    <TextArea\n      flex\n      padding={[16, 8, 8, 16]}\n      label='Label...'\n    />\n  </Flex>,\n  dom,\n)",example:{type:o,props:{gap:[0,8],wrap:!0},children:[{type:r,props:{flex:!0,padding:[0,8],placeholder:"Placeholder..."}},{type:r,props:{flex:!0,padding:[14,16,4],label:"Label..."}},{type:r,props:{flex:!0,padding:[16,8,8,16],label:"Label..."}}]}}),e({id:"placeholder",title:"placeholder",description:"`TextArea` extends `placeholder` property from [Input](/interaction/input#placeholder)\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { TextArea } from '@cantinc/ui'\n\ninnet(\n  <TextArea placeholder='Placeholder' />,\n  dom,\n)",example:{type:r,props:{placeholder:"Placeholder"}}}),f,y,d,s,h,e({id:"resize",title:"resize",description:"By default, shows an input\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { Flex, TextArea } from '@cantinc/ui'\n\ninnet(\n  <Flex vertical>\n    <TextArea label='auto' placeholder='Default value' resize='auto' />\n    <TextArea resize />\n    <TextArea label='vertical' resize='vertical' />\n    <TextArea label='horizontal' resize='horizontal' />\n    <TextArea label='both' resize='both' />\n    <TextArea label='none' resize='none' />\n  </Flex>,\n  dom,\n)",example:{type:o,props:{vertical:!0},children:[{type:r,props:{label:"auto",placeholder:"Default value",resize:"auto"}},{type:r,props:{resize:!0}},{type:r,props:{label:"vertical",resize:"vertical"}},{type:r,props:{label:"horizontal",resize:"horizontal"}},{type:r,props:{label:"both",resize:"both"}},{type:r,props:{label:"none",resize:"none"}}]}}),e({id:"rows",title:"rows",description:"By default, shows an input\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { Flex, TextArea } from '@cantinc/ui'\n\ninnet(\n  <Flex align='stretch' vertical>\n    <TextArea rows={1} />\n    <TextArea resize='none' rows={1} />\n    <TextArea resize='none' rows={3} />\n  </Flex>,\n  dom,\n)",example:{type:o,props:{align:"stretch",vertical:!0},children:[{type:r,props:{rows:1}},{type:r,props:{resize:"none",rows:1}},{type:r,props:{resize:"none",rows:3}}]}}),a],A=()=>({type:n,props:{component:r,name:"TextArea",description:"# TextArea\n\nUse this component to add textarea element\n\n```typescript\nimport { TextArea } from '@cantinc/ui'\n```\n\n## Extends\n\n- [Input](/interaction/input)\n",examples:T}});export{A as default};
