import{a as n,e,C as o}from"./Component-a91cba9b.js";import{S as t,_ as s,G as r,a as p,I as a,s as i,ae as m,u as d,af as l}from"./docs-3e04aeb9.js";import{u as c}from"./unwatch.es6-d4470f01.js";import{I as u}from"./Input-a8f874de.js";import{B as f}from"./Button-81a7507a.js";import{p as I}from"./parseForm-4ca918bf.js";import{F as b}from"./FormInput-14050bf4.js";import"./Typography-af300282.js";import"./useField-1ba924d9.js";function h(n=32){let e="";for(;n>10;)e+=h(10),n-=10;return n>0&&(e+=Math.random().toString(36).slice(-n)),e}const y=i(m),S=Symbol("SetKey");function F(e){var{value:o=new t([]),onchange:i,element:m,handleItemProps:l=(n=>n.value)}=e,u=s(e,["value","onchange","element","handleItemProps"]);const f=y(),I=d();i=n(o,i);const b=new r((()=>{const n=p(o);for(const e of n)S in e||(e[S]=h());return n}));return[{type:"for",props:{of:b,key:S},children:[n=>({type:m,props:{...c((()=>l(n)))},children:[{type:"slot",props:{name:"after"},children:[{type:a,props:{class:f.remove,onclick:()=>(n=>{const e=[...p(o)];e.splice(n,1),null==i||i(e)})(n.index),icon:"brick"}}]}]})]},{type:"button",props:{type:"button",onclick:()=>{null==i||i([...p(o),Object.assign({},u)])},class:()=>f.addButton},children:[I]}]}var j=[e({id:"default",title:"Default",description:"Usage with [Input](/interaction/input)\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { Set, Input, InputProps, Icon } from '@cantinc/ui'\n\ninnet(\n  <Set<InputProps>\n    element={Input}\n    label='Address'\n    name='address'>\n    <Icon icon='plus' />\n    Add an address\n  </Set>,\n  dom,\n)",example:{type:F,props:{element:u,label:"Address",name:"address"},children:[{type:a,props:{icon:"plus"}},"Add an address"]}}),e({id:"form",title:"form",description:"Usage with [FormInput](/forms/input)\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport {\n  Set,\n  Form,\n  FormInput,\n  FormInputProps,\n  Icon,\n  Button,\n} from '@cantinc/ui'\n\ninnet(\n  <Form onsuccess={form => console.log(parseForm(form))}>\n    <Set<FormInputProps>\n      element={FormInput}\n      label='Address'\n      required\n      name='address'>\n      <Icon icon='plus' />\n      Add an address\n    </Set>\n    <Button>\n      Send\n    </Button>\n  </Form>,\n  dom,\n)",example:{type:l,props:{onsuccess:n=>console.log(I(n))},children:[{type:F,props:{element:b,handleItemProps:n=>Object.assign(Object.assign({},n.value),{label:()=>`${n.value.label} ${n.index+1}`}),label:"Address",required:!0,name:"address"},children:[{type:a,props:{icon:"plus"}},"Add an address"]},{type:f,children:["Send"]}]}})],g=()=>({type:o,props:{component:F,name:"Set",description:"# Set\n\nUse the component to add set of elements.\n\n```typescript\nimport { Set } from '@cantinc/ui'\n```\n",examples:j}});export{g as default};
