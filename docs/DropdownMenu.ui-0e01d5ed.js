import{e as n,A as e,C as o}from"./Component-18ceda8d.js";import{D as t}from"./DropdownMenu-760334dc.js";import{a,S as l,R as r}from"./docs-0e0d7a5f.js";import{B as s}from"./Button-bd477760.js";import{M as p,a as i}from"./Modal-b4bbbd64.js";import"./Typography-dcbd2e36.js";import"./Dropdown-e4dd583d.js";import"./Icon-6b3b2244.js";const u=new l(!1),d=new r,c=()=>{u.value=!1};var m=n({id:"default",title:"Default",description:"You can bind state on focus and click.\n",code:"import innet from 'innet'\nimport dom, { Ref, use } from '@innet/dom'\nimport { State } from 'watch-state'\n\nimport { Arrow, Button, DropdownMenu, MenuOption } from '@cantinc/ui'\n\nconst state = new State(false)\nconst button = new Ref<HTMLButtonElement>()\n\nconst toggle = () => {\n  state.value = !state.value\n}\nconst hide = () => {\n  state.value = false\n}\nconst values: MenuOption[] = [\n  { value: '1', label: 'Test 1' },\n  { value: '2', label: 'Test 2' },\n  { value: '3', label: 'Test 3' },\n]\n\ninnet(\n  <>\n    <Button\n      padding={8}\n      gap={8}\n      onclick={toggle}\n      onblur={hide}\n      ref={button}>\n      Click Me\n      <Arrow\n        color='var(--color-100)'\n        direction={() => use(state) ? 'top' : 'down'}\n      />\n    </Button>\n    <DropdownMenu\n      onSelect={hide}\n      values={values}\n      show={state}\n      element={button}>\n      Test\n    </DropdownMenu>\n  </>,\n  dom,\n)",example:[{type:s,props:{padding:8,gap:8,onclick:()=>{u.value=!u.value},onblur:c,ref:d},children:["Click Me",{type:e,props:{color:"var(--color-100)",direction:()=>a(u)?"top":"down"}}]},{type:t,props:{onSelect:c,values:[{value:"1",label:"Test 1"},{value:"2",label:"Test 2"},{value:"3",label:"Test 3"}],show:u,element:d}}]});const v=new l(!1),w=new l(!1),f=new r,b=()=>{v.value=!1};var h=[m,n({id:"default",title:"Default",description:"Dropdown in a modal.\n",code:"import innet from 'innet'\nimport dom, { Ref, use } from '@innet/dom'\nimport { State } from 'watch-state'\n\nimport { Arrow, Button, DropdownMenu, MenuOption } from '@cantinc/ui'\n\nconst state = new State(false)\nconst button = new Ref<HTMLButtonElement>()\n\nconst toggle = () => {\n  state.value = !state.value\n}\nconst hide = () => {\n  state.value = false\n}\nconst values: MenuOption[] = [\n  { value: '1', label: 'Test 1' },\n  { value: '2', label: 'Test 2' },\n  { value: '3', label: 'Test 3' },\n]\n\ninnet(\n  <>\n    <Button\n      padding={8}\n      gap={8}\n      onclick={toggle}\n      onblur={hide}\n      ref={button}>\n      Click Me\n      <Arrow\n        color='var(--color-100)'\n        direction={() => use(state) ? 'top' : 'down'}\n      />\n    </Button>\n    <DropdownMenu\n      onSelect={hide}\n      values={values}\n      show={state}\n      element={button}>\n      Test\n    </DropdownMenu>\n  </>,\n  dom,\n)",example:[{type:s,props:{onclick:()=>{w.value=!0}},children:["Click Me"]},{type:"portal",props:{parent:document.body},children:[{type:p,children:[{type:"show",props:{state:w},children:[{type:i,props:{headButtons:[],onclose:()=>{w.value=!1}},children:[{type:s,props:{padding:8,gap:8,onclick:()=>{v.value=!v.value},onblur:b,ref:f},children:["Click Me",{type:e,props:{color:"var(--color-100)",direction:()=>a(v)?"top":"down"}}]},{type:t,props:{onSelect:b,values:[{value:"1",label:"Test 1"},{value:"2",label:"Test 2"},{value:"3",label:"Test 3"}],show:v,element:f}}]}]}]}]}]})],M=()=>({type:o,props:{component:t,name:"DropdownMenu",description:"# DropdownMenu\n\nThis component show a popup for an HTML element.\n\n```typescript\nimport { DropdownMenu } from '@cantinc/ui'\n```\n\n## Extends\n\n- [Dropdown](/popups/dropdown)\n\n## Extend\n\n- [Selector](/interaction/selector)\n",examples:h}});export{M as default};
