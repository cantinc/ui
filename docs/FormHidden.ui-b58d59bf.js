import{e,C as n}from"./Component-10445ec5.js";import{aD as t,ae as o,R as r,S as a,o as s,O as i,W as m,a as c,aB as d,B as p,Z as f}from"./docs-2558e852.js";import{c as u}from"./createFormData-2eb1175c.js";import"./Typography-362b426e.js";function l({name:e,value:n}){const d=t();if(!d)return;const p=o((()=>c(n))),f=function(e){if(e instanceof a)return e;if(e instanceof i||"function"==typeof e){const n=new a;return new m((()=>{n.value=c(e)})),n}return new a(e)}(n),u={name:e,defaultValue:p,element:new r,state:f,error:new a("")};d.fields.add(u),s((()=>{d.destroyed||d.fields.delete(u)}))}var h=[e({id:"default",title:"Default",description:"This example shows a form with submit button and the hidden field.\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport {\n  Form,\n  FormHidden,\n  Button,\n  Notifications,\n  notify,\n  createFormDate,\n} from '@cantinc/ui'\n\nconst handleSuccess = (form: FormContext) => {\n  notify(`User: ${createFormDate(form, 'POST').get('user')}`)\n}\n\ninnet(\n  <>\n    <Form onsuccess={handleSuccess} vertical>\n      <FormHidden name='user' value='1' />\n      <Button view='negative'>\n        Delete\n      </Button>\n    </Form>\n    <Notifications />\n  </>,\n  dom,\n)",example:{type:d,props:{onsuccess:e=>{f(`User: ${u(e).get("user")}`)},vertical:!0},children:[{type:l,props:{name:"user",value:"1"}},{type:p,props:{view:"negative"},children:["Delete"]}]}})],F=()=>({type:n,props:{component:l,name:"FormInput",description:"# FormHidden\n\nUse this component to add hidden form field.\n\n```typescript\nimport { FormHidden } from '@cantinc/ui'\n```\n",examples:h}});export{F as default};
