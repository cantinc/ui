import{e as n,a as e,C as t}from"./Component-355e5978.js";import{P as o}from"./Popout-981d5d25.js";import{I as i,B as r,R as p,S as a,aa as s,F as c}from"./docs-87b449de.js";import{C as l}from"./Content-bd063ae4.js";import{I as d}from"./Image-d0439013.js";import{T as u}from"./Typography-8ccf24db.js";var h="/ui/assets/bg1-d4c71bfe.webp";const m=new p,y=new a(!1);var f=n({id:"background",title:"background",description:"Elements which inside `Flex` are placed horizontal by default.\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport {\n  Image,\n  Icon,\n  Popout,\n  Content,\n  Card,\n  Typography,\n  Button\n} from '@cantinc/ui'\n\nimport background from './background.jpg'\n\nconst ref = new Ref<HTMLElement>()\nconst state = new State(false)\n\nconst show = () => {\n  state.value = true\n}\nconst hide = () => {\n  state.value = false\n}\n\ninnet(\n  <>\n    <Image\n      style={{ 'user-select': 'none', cursor: 'pointer' }}\n      onclick={show}\n      justify='center'\n      align='center'\n      src={background}\n      radius={70}\n      ref={ref}\n      size={140}>\n      <Icon\n        color='var(--color-100)'\n        size={32}>\n        13\n      </Icon>\n    </Image>\n    <Popout\n      contentStyle={{ background: 'transparent' }}\n      show={state}\n      element={ref}>\n      <Content width={480} vertical align='stretch'>\n        <Card gap={16} align='stretch' vertical flex>\n          <Typography>\n            <h1>DISCANT</h1>\n            <p>This is a loyalty program. Count cants and get gifts.</p>\n            <p>You have: 13 <Icon /></p>\n          </Typography>\n          <Button flex onclick={hide}>\n            Cancel\n          </Button>\n        </Card>\n      </Content>\n    </Popout>\n  </>,\n  dom,\n)",example:[{type:d,props:{style:{"user-select":"none",cursor:"pointer"},onclick:()=>{y.value=!0},justify:"center",align:"center",src:h,radius:70,ref:m,size:140},children:[{type:i,props:{icon:"cant",color:"var(--color-100)",size:48}}]},{type:o,props:{background:`url("/ui/assets/bg2-8938625b.webp") center / cover, url("${h}") center / cover`,show:y,element:m},children:[{type:l,props:{width:480,vertical:!0,align:"stretch"},children:[{type:e,props:{gap:16,align:"stretch",vertical:!0,flex:!0},children:[{type:u,children:[{type:"h1",children:["DISCANT"]},{type:"p",children:["This is a loyalty program. Count cants and get gifts."]},{type:"p",children:["You have: 13",{type:i}]}]},{type:r,props:{flex:!0,onclick:()=>{y.value=!1}},children:["Cancel"]}]}]}]}]});const g=new a(!1),v=new p,w=new a(!1),k=new p;var C=n({id:"deep",title:"Deep",description:"You can show a `Popout` inside another one.\n",code:"import innet from 'innet'\nimport dom, { Ref } from '@innet/dom'\nimport { State } from 'watch-state'\n\nimport { Content, Button, Popout, Typography, Buttons } from '@cantinc/ui'\n\nconst state1 = new State(false)\nconst button1 = new Ref<HTMLButtonElement>()\nconst state2 = new State(false)\nconst button2 = new Ref<HTMLButtonElement>()\n\nconst show1 = () => { state1.value = true }\nconst hide1 = () => { state1.value = false }\nconst show2 = () => { state2.value = true }\nconst hide2 = () => { state2.value = false }\n\ninnet(\n  <>\n    <Button\n      onclick={show1}\n      ref={button1}>\n      Click Me\n    </Button>\n    <Popout\n      padding={16}\n      show={state1}\n      element={button1}>\n      <Content width={480} gap={16} vertical>\n        <Typography>\n          <p>Do you want to see the next screen?</p>\n        </Typography>\n        <Buttons gap={16}>\n          <Button flex view='negative' onclick={hide1}>\n            No\n          </Button>\n          <Button ref={button2} flex view='positive' onclick={show2}>\n            Yes\n          </Button>\n        </Buttons>\n        <Popout\n          padding={16}\n          show={state2}\n          element={button2}>\n          <Content width={480} gap={16} vertical>\n            <Typography>\n              <p>This is the second screen</p>\n            </Typography>\n            <Button flex onclick={hide2}>\n              Cancel\n            </Button>\n          </Content>\n        </Popout>\n      </Content>\n    </Popout>\n  </>,\n  dom,\n)",example:[{type:r,props:{onclick:()=>{g.value=!0},ref:v},children:["Click Me"]},{type:o,props:{padding:16,show:g,element:v},children:[{type:l,props:{width:480,vertical:!0},children:[{type:e,props:{preventAnimation:!0,vertical:!0,align:"stretch",gap:16},children:[{type:u,children:[{type:"p",children:["Do you want to see the next screen?"]}]},{type:s,props:{gap:16},children:[{type:r,props:{flex:!0,view:"negative",onclick:()=>{g.value=!1}},children:["No"]},{type:r,props:{ref:k,flex:!0,view:"positive",onclick:()=>{w.value=!0}},children:["Yes"]}]}]},{type:o,props:{padding:16,show:w,element:k},children:[{type:l,props:{width:480,vertical:!0},children:[{type:e,props:{preventAnimation:!0,vertical:!0,align:"stretch",gap:16},children:[{type:u,children:[{type:"p",children:["This is the second screen"]}]},{type:r,props:{flex:!0,onclick:()=>{w.value=!1}},children:["Cancel"]}]}]}]}]}]}]});const B=new a(!1),x=new p,b=()=>{B.value=!1};var T=n({id:"default",title:"Default",description:"This is a simple example of `Popout` usage.\n",code:"import innet from 'innet'\nimport dom, { Ref } from '@innet/dom'\nimport { State } from 'watch-state'\n\nimport {\n  Content,\n  Button,\n  Popout,\n  Typography,\n  Buttons,\n  Card\n} from '@cantinc/ui'\n\nconst state = new State(false)\nconst button = new Ref<HTMLButtonElement>()\n\nconst show = () => {\n  state.value = true\n}\nconst hide = () => {\n  state.value = false\n}\n\ninnet(\n  <>\n    <Button\n      onclick={show}\n      ref={button}>\n      Click Me\n    </Button>\n    <Popout\n      closeButton\n      padding={16}\n      show={state}\n      element={button}>\n      <Content width={480}>\n        <Card flex preventAnimation vertical align='stretch' gap={16}>\n          <Typography>\n            <h2>Answer for next question</h2>\n            <p>Is it looks like a modal?</p>\n          </Typography>\n          <Buttons gap={16}>\n            <Button flex view='negative' onclick={hide}>\n              No\n            </Button>\n            <Button flex view='positive' onclick={hide}>\n              Yes\n            </Button>\n          </Buttons>\n        </Card>\n      </Content>\n    </Popout>\n  </>,\n  dom,\n)",example:[{type:r,props:{onclick:()=>{B.value=!0},ref:x},children:["Click Me"]},{type:o,props:{closeButton:!0,padding:16,show:B,element:x},children:[{type:l,props:{width:480},children:[{type:e,props:{flex:!0,preventAnimation:!0,vertical:!0,align:"stretch",gap:16},children:[{type:u,children:[{type:"h2",children:["Answer for next question"]},{type:"p",children:["Is it looks like a modal?"]}]},{type:s,props:{gap:16},children:[{type:r,props:{flex:!0,view:"negative",onclick:b},children:["No"]},{type:r,props:{flex:!0,view:"positive",onclick:b},children:["Yes"]}]}]}]}]}]});const I=new a(!1),P=new p,S=n=>{P.value=n.target,I.value=!0},M=()=>{I.value=!1};var A=n({id:"dynamicElement",title:"Dynamic Element",description:"You can change element ref before open `Popout`.\n",code:"import innet from 'innet'\nimport dom, { Ref } from '@innet/dom'\nimport { State } from 'watch-state'\n\nimport {\n  Content,\n  Button,\n  Popout,\n  Typography,\n  Buttons,\n  Card,\n  Flex\n} from '@cantinc/ui'\n\nconst state = new State(false)\nconst button = new Ref<HTMLButtonElement>()\n\nconst show = (e: MouseEvent) => {\n  button.value = e.target as HTMLButtonElement\n  state.value = true\n}\nconst hide = () => {\n  state.value = false\n}\n\ninnet(\n  <Flex wrap gap={16}>\n    <Button\n      view='negative'\n      onclick={show}>\n      Click Me\n    </Button>\n    <Button\n      view='positive'\n      onclick={show}>\n      Click Me\n    </Button>\n    <Popout\n      padding={16}\n      show={state}\n      element={button}>\n      <Content width={480}>\n        <Card preventAnimation vertical align='stretch' gap={16}>\n          <Typography>\n            <h2>Answer for next question</h2>\n            <p>Is it looks like a modal?</p>\n          </Typography>\n          <Buttons gap={16}>\n            <Button flex view='negative' onclick={hide}>\n              No\n            </Button>\n            <Button flex view='positive' onclick={hide}>\n              Yes\n            </Button>\n          </Buttons>\n        </Card>\n      </Content>\n    </Popout>\n  </Flex>,\n  dom,\n)",example:{type:c,props:{wrap:!0,gap:16},children:[{type:r,props:{view:"negative",onclick:S},children:["Click Me"]},{type:r,props:{view:"positive",onclick:S},children:["Click Me"]},{type:o,props:{padding:16,show:I,element:P},children:[{type:l,props:{width:480},children:[{type:e,props:{preventAnimation:!0,vertical:!0,align:"stretch",gap:16},children:[{type:u,children:[{type:"h2",children:["Answer for next question"]},{type:"p",children:["Is it looks like a modal?"]}]},{type:s,props:{gap:16},children:[{type:r,props:{flex:!0,view:"negative",onclick:M},children:["No"]},{type:r,props:{flex:!0,view:"positive",onclick:M},children:["Yes"]}]}]}]}]}]}});const j=new p,E=new a(!1);var Y=[T,A,C,n({id:"image",title:"Image",description:"Elements which inside `Flex` are placed horizontal by default.\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport {\n  Image,\n  Icon,\n  Popout,\n  Content,\n  Card,\n  Typography,\n  Button\n} from '@cantinc/ui'\n\nimport background from './background.jpg'\n\nconst ref = new Ref<HTMLElement>()\nconst state = new State(false)\n\nconst show = () => {\n  state.value = true\n}\nconst hide = () => {\n  state.value = false\n}\n\ninnet(\n  <>\n    <Image\n      style={{ 'user-select': 'none', cursor: 'pointer' }}\n      onclick={show}\n      justify='center'\n      align='center'\n      src={background}\n      radius={70}\n      ref={ref}\n      size={140}>\n      <Icon\n        color='var(--color-100)'\n        size={32}>\n        13\n      </Icon>\n    </Image>\n    <Popout\n      contentStyle={{ background: 'transparent' }}\n      show={state}\n      element={ref}>\n      <Content width={480} vertical>\n        <Card gap={16} align='stretch' vertical flex>\n          <Typography>\n            <h1>DISCANT</h1>\n            <p>This is a loyalty program. Count cants and get gifts.</p>\n            <p>You have: 13 <Icon /></p>\n          </Typography>\n          <Button flex onclick={hide}>\n            Cancel\n          </Button>\n        </Card>\n      </Content>\n    </Popout>\n  </>,\n  dom,\n)",example:[{type:d,props:{style:{"user-select":"none",cursor:"pointer"},onclick:()=>{E.value=!0},justify:"center",align:"center",src:"/ui/assets/background-d93ba392.jpg",radius:70,ref:j,size:140},children:[{type:i,props:{color:"var(--color-100)",size:32},children:["13"]}]},{type:o,props:{contentStyle:{background:"transparent"},show:E,element:j},children:[{type:l,props:{width:480,vertical:!0},children:[{type:e,props:{gap:16,align:"stretch",vertical:!0,flex:!0},children:[{type:u,children:[{type:"h1",children:["DISCANT"]},{type:"p",children:["This is a loyalty program. Count cants and get gifts."]},{type:"p",children:["You have: 13",{type:i}]}]},{type:r,props:{flex:!0,onclick:()=>{E.value=!1}},children:["Cancel"]}]}]}]}]}),f],R=()=>({type:t,props:{component:o,name:"Popout",description:"# Popout\n\n`Popout` is a full screen popup.\n\nThe element has unique animation of itself reveal, which relates to another element.\n\n```typescript\nimport { Popout } from '@cantinc/ui'\n```\n\n## Required props\n\n- `element`\n",examples:Y}});export{R as default};
