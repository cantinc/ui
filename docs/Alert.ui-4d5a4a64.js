import{e,C as n}from"./Component-10445ec5.js";import{_ as t,u as r,h as a,j as i,F as o,s as l,a0 as p,B as s,a1 as d,S as c,a2 as u,a3 as m,a as v}from"./docs-2558e852.js";import"./Typography-362b426e.js";const f=l(p);function h(e={}){var{view:n="warning"}=e,l=t(e,["view"]);const p=r(),s=a(),d=i(),c=f();return{type:o,props:{padding:24,align:"center",justify:"center",...l,class:()=>[c.root,d.value&&c.show,(null==s?void 0:s.value)&&c.hide,c[n]]},children:[p]}}var y=e({id:"button",title:"Button",description:"You can use different content\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { Alert, Button } from '@cantinc/ui'\n\ninnet(\n  <Alert gap={24} flex>\n    New version is available!\n    <Button view='ghost' padding={16}>\n      Update\n    </Button>\n  </Alert>,\n  dom,\n)",example:{type:h,props:{gap:24,flex:!0},children:["New version is available!",{type:s,props:{view:"ghost",padding:16},children:["Update"]}]}}),x=e({id:"default",title:"Default",description:"Simple example\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { Alert } from '@cantinc/ui'\n\ninnet(\n  <Alert view='success'>\n    Alert content\n  </Alert>,\n  dom,\n)",example:{type:h,props:{view:"success"},children:["Alert content"]}});const A=new c([]),w=new c("");let g=0;const B=u((()=>{A.value.push({id:g++,text:w.value}),A.update(),w.value=""}));var b=e({id:"dynamic",title:"Dynamic",description:"You can use different content\n",code:"import innet from 'innet'\nimport { use, useMapValue } from '@innet/dom'\nimport { createEvent, State } from 'watch-state'\n\nimport { Alert, Flex, Button, Input } from '@cantinc/ui'\n\ninterface AlertData {\n  id: number\n  text: string\n}\n\nconst alerts = new State<AlertData[]>([])\nconst text = new State('')\nlet id = 0\n\nconst addAlert = createEvent(() => {\n  alerts.value.push({\n    id: id++,\n    text: text.value,\n  })\n\n  alerts.update()\n  text.value = ''\n})\n\nconst removeAlert = (removeId: number) => {\n  alerts.value = alerts\n    .value\n    .filter(({ id }) => id !== removeId)\n}\n\nfunction MapAlert () {\n  const item = useMapValue<AlertData>()\n\n  return (\n    <delay hide={300}>\n      <Alert gap={24} justify='between'>\n        {() => use(item).text}\n        <Button\n          onclick={() => {\n            removeAlert(use(item).id)\n          }}\n          view='ghost'\n          padding={16}>\n          Done\n        </Button>\n      </Alert>\n    </delay>\n  )\n}\n\ninnet(\n  <Flex reverse vertical align='stretch'>\n    <map of={alerts} key='id'>\n      <MapAlert />\n    </map>\n    <Flex wrap gap={24}>\n      <Input\n        flex\n        placeholder='Enter alert text'\n        value={text}\n      />\n      <Button onclick={addAlert}>\n        Add\n      </Button>\n    </Flex>\n  </Flex>,\n  dom,\n)",example:{type:o,props:{reverse:!0,vertical:!0,align:"stretch"},children:[{type:"map",props:{of:A,key:"id"},children:[{type:function(){const e=m();return{type:"delay",props:{hide:300},children:[{type:h,props:{gap:24,justify:"between"},children:[()=>v(e).text,{type:s,props:{onclick:()=>{var n;n=v(e).id,A.value=A.value.filter((({id:e})=>e!==n))},view:"ghost",padding:16},children:["Done"]}]}]}}}]},{type:o,props:{wrap:!0,gap:24},children:[{type:d,props:{flex:!0,placeholder:"Enter alert text",value:w}},{type:s,props:{onclick:B},children:["Add"]}]}]}}),j=[x,y,b],D=()=>({type:n,props:{component:h,name:"Alert",description:"# Alert\n\nThis component show an alert.\n\n```typescript\nimport { Alert } from '@cantinc/ui'\n```\n",examples:j}});export{D as default};
