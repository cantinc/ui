import{e as n,A as o,C as t}from"./Component-c2d1f5f9.js";import{D as e}from"./Dropdown-ff45da91.js";import{B as r,a as p,S as a,R as i}from"./docs-dcf3a74d.js";import"./Typography-0005af32.js";const s=new a(!1),c=new i;var d=n({id:"default",title:"Default",description:"`element` and `show` are required props.\n\nYou can bind the `show` state of popup strongly on click.\n",code:"import innet from 'innet'\nimport dom, { Ref, use } from '@innet/dom'\nimport { State } from 'watch-state'\n\nimport { Arrow, Button, Dropdown } from '@cantinc/ui'\n\nconst show = new State(false)\nconst button = new Ref<HTMLButtonElement>()\n\ninnet(\n  <>\n    <Button\n      padding={8}\n      gap={8}\n      onclick={() => {\n        show.value = !show.value\n      }}\n      ref={button}>\n      Click Me\n      <Arrow\n        color='var(--color-100)'\n        direction={() => use(show) ? 'top' : 'down'}\n      />\n    </Button>\n    <Dropdown\n      padding={16}\n      show={show}\n      element={button}>\n      Test\n    </Dropdown>\n  </>,\n  dom,\n)",example:[{type:r,props:{padding:8,gap:8,onclick:()=>{s.value=!s.value},ref:c},children:["Click Me",{type:o,props:{color:"var(--color-100)",direction:()=>p(s)?"top":"down"}}]},{type:e,props:{padding:16,show:s,element:c},children:["Test"]}]});const l=new a(!1),u=new i;var m=n({id:"focus",title:"Focus",description:"You can bind state on focus to show and hide the popup.\n",code:"import innet from 'innet'\nimport dom, { Ref, use } from '@innet/dom'\nimport { State } from 'watch-state'\n\nimport { Arrow, Button, Dropdown } from '@cantinc/ui'\n\nconst state = new State(false)\nconst button = new Ref<HTMLButtonElement>()\n\nconst show = () => {\n  state.value = true\n}\nconst hide = () => {\n  state.value = false\n}\n\ninnet(\n  <>\n    <Button\n      padding={8}\n      gap={8}\n      onfocus={show}\n      onblur={hide}\n      ref={button}>\n      Click Me\n      <Arrow\n        color='var(--color-100)'\n        direction={() => use(state) ? 'top' : 'down'}\n      />\n    </Button>\n    <Dropdown\n      padding={16}\n      show={state}\n      element={button}>\n      Test\n    </Dropdown>\n  </>,\n  dom,\n)",example:[{type:r,props:{padding:8,gap:8,onfocus:()=>{l.value=!0},onblur:()=>{l.value=!1},ref:u},children:["Click Me",{type:o,props:{color:"var(--color-100)",direction:()=>p(l)?"top":"down"}}]},{type:e,props:{padding:16,show:l,element:u},children:["Test"]}]});const w=new a(!1),f=new i;var h=n({id:"focusAndClick",title:"Focus & Click",description:"You can bind state on focus and click.\n",code:"import innet from 'innet'\nimport dom, { Ref, use } from '@innet/dom'\nimport { State } from 'watch-state'\n\nimport { Arrow, Button, Dropdown } from '@cantinc/ui'\n\nconst state = new State(false)\nconst button = new Ref<HTMLButtonElement>()\n\nconst toggle = () => {\n  state.value = !state.value\n}\nconst hide = () => {\n  state.value = false\n}\n\ninnet(\n  <>\n    <Button\n      padding={8}\n      gap={8}\n      onclick={toggle}\n      onblur={hide}\n      ref={button}>\n      Click Me\n      <Arrow\n        color='var(--color-100)'\n        direction={() => use(state) ? 'top' : 'down'}\n      />\n    </Button>\n    <Dropdown\n      padding={16}\n      show={state}\n      element={button}>\n      Test\n    </Dropdown>\n  </>,\n  dom,\n)",example:[{type:r,props:{padding:8,gap:8,onclick:()=>{w.value=!w.value},onblur:()=>{w.value=!1},ref:f},children:["Click Me",{type:o,props:{color:"var(--color-100)",direction:()=>p(w)?"top":"down"}}]},{type:e,props:{padding:16,show:w,element:f},children:["Test"]}]});const g=new a(!1),v=new i;var b=[d,m,h,n({id:"placement",title:"placement",description:"You can show the popup on the top of the element by `placement`.\n",code:"import innet from 'innet'\nimport dom, { Ref, use } from '@innet/dom'\nimport { State } from 'watch-state'\n\nimport { Arrow, Button, Dropdown } from '@cantinc/ui'\n\nconst state = new State(false)\nconst button = new Ref<HTMLButtonElement>()\n\nconst show = () => {\n  state.value = true\n}\nconst hide = () => {\n  state.value = false\n}\n\ninnet(\n  <>\n    <Button\n      padding={8}\n      gap={8}\n      onfocus={show}\n      onblur={hide}\n      ref={button}>\n      Click Me\n      <Arrow\n        color='var(--color-100)'\n        direction={() => use(state) ? 'top' : 'down'}\n      />\n    </Button>\n    <Dropdown\n      placement='top'\n      padding={16}\n      show={state}\n      element={button}>\n      Test\n    </Dropdown>\n  </>,\n  dom,\n)",example:[{type:r,props:{padding:8,gap:8,onfocus:()=>{g.value=!0},onblur:()=>{g.value=!1},ref:v},children:["Click Me",{type:o,props:{color:"var(--color-100)",direction:()=>p(g)?"top":"down"}}]},{type:e,props:{placement:"top",padding:16,show:g,element:v},children:["Test"]}]})],y=()=>({type:t,props:{component:e,name:"Dropdown",description:"# Dropdown\n\nThis component show a popup for an HTML element.\n\n```typescript\nimport { Dropdown } from '@cantinc/ui'\n```\n",examples:b}});export{y as default};
