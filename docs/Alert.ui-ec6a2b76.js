import{e,C as n}from"./Component-c6300f87.js";import{_ as t,g as r,h as i,F as o,s as a,$ as l,u as p,B as s,a0 as d,S as c,a1 as m}from"./docs-b93caad8.js";import"./Typography-840ee348.js";const u=a(l);function v(e={}){var{view:n="warning"}=e,a=t(e,["view"]);const l=p(),s=r(),d=i(),c=u();return{type:o,props:{padding:24,align:"center",justify:"center",...a,class:()=>[c.root,d.value&&c.show,(null==s?void 0:s.value)&&c.hide,c[n]]},children:[l]}}var f=e({id:"button",title:"Button",description:"You can use different content\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { Alert, Button } from '@cantinc/ui'\n\ninnet(\n  <Alert gap={24} flex>\n    New version is available!\n    <Button view='ghost' padding={16}>\n      Update\n    </Button>\n  </Alert>,\n  dom,\n)",example:{type:v,props:{gap:24,flex:!0},children:["New version is available!",{type:s,props:{view:"ghost",padding:16},children:["Update"]}]}}),h=e({id:"default",title:"Default",description:"Simple example\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport { Alert } from '@cantinc/ui'\n\ninnet(\n  <Alert view='success'>\n    Alert content\n  </Alert>,\n  dom,\n)",example:{type:v,props:{view:"success"},children:["Alert content"]}});const y=new c([]),x=new c("");let A=0;const g=m((()=>{y.value.push({id:A++,text:x.value}),y.update(),x.value=""}));var w=e({id:"dynamic",title:"Dynamic",description:"You can use different content\n",code:"import innet from 'innet'\nimport dom, { type LoopItem } from '@innet/dom'\nimport { createEvent, State } from 'watch-state'\n\nimport { Alert, Flex, Button, Input } from '@cantinc/ui'\n\ninterface AlertData {\n  id: number\n  text: string\n}\n\nconst alerts = new State<AlertData[]>([])\nconst text = new State('')\nlet id = 0\n\nconst addAlert = createEvent(() => {\n  alerts.value.push({\n    id: id++,\n    text: text.value,\n  })\n\n  alerts.update()\n  text.value = ''\n})\n\nconst removeAlert = (removeId: number) => {\n  alerts.value = alerts\n    .value\n    .filter(({ id }) => id !== removeId)\n}\n\ninnet(\n  <Flex reverse vertical align='stretch'>\n    <for of={alerts} key='id'>\n      {(item: LoopItem<AlertData>) => (\n        <delay hide={300}>\n          <Alert gap={24} justify='between'>\n            {() => item.value.text}\n            <Button\n              onclick={() => {\n                removeAlert(item.value.id)\n              }}\n              view='ghost'\n              padding={16}>\n              Done\n            </Button>\n          </Alert>\n        </delay>\n      )}\n    </for>\n    <Flex wrap gap={24}>\n      <Input\n        flex\n        placeholder='Enter alert text'\n        value={text}\n      />\n      <Button onclick={addAlert}>\n        Add\n      </Button>\n    </Flex>\n  </Flex>,\n  dom,\n)",example:{type:o,props:{reverse:!0,vertical:!0,align:"stretch"},children:[{type:"for",props:{of:y,key:"id"},children:[e=>({type:"delay",props:{hide:300},children:[{type:v,props:{gap:24,justify:"between"},children:[()=>e.value.text,{type:s,props:{onclick:()=>{var n;n=e.value.id,y.value=y.value.filter((({id:e})=>e!==n))},view:"ghost",padding:16},children:["Done"]}]}]})]},{type:o,props:{wrap:!0,gap:24},children:[{type:d,props:{flex:!0,placeholder:"Enter alert text",value:x}},{type:s,props:{onclick:g},children:["Add"]}]}]}}),B=[h,f,w],b=()=>({type:n,props:{component:v,name:"Alert",description:"# Alert\n\nThis component show an alert.\n\n```typescript\nimport { Alert } from '@cantinc/ui'\n```\n",examples:B}});export{b as default};
