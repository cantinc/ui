import{e as n,A as e,C as o}from"./Component-15ffbf72.js";import{D as t}from"./DropdownMenu-2dd8db62.js";import{a,S as s,R as r}from"./docs-7f82f961.js";import{B as p}from"./Button-53a5d86c.js";import"./Typography-fec4f26f.js";import"./useListener-ff43f1fd.js";import"./Dropdown-68d55065.js";const l=new s(!1),i=new r,u=()=>{l.value=!1};var d=[n({id:"default",title:"Default",description:"You can bind state on focus and click.\n",code:"import innet from 'innet'\nimport dom, { Ref, use } from '@innet/dom'\nimport { State } from 'watch-state'\n\nimport { Arrow, Button, DropdownMenu, MenuOption } from '@cantinc/ui'\n\nconst state = new State(false)\nconst button = new Ref<HTMLButtonElement>()\n\nconst toggle = () => {\n  state.value = !state.value\n}\nconst hide = () => {\n  state.value = false\n}\nconst values: MenuOption[] = [\n  { value: '1', label: 'Test 1' },\n  { value: '2', label: 'Test 2' },\n  { value: '3', label: 'Test 3' },\n]\n\ninnet(\n  <>\n    <Button\n      padding={8}\n      gap={8}\n      onclick={toggle}\n      onblur={hide}\n      ref={button}>\n      Click Me\n      <Arrow\n        color='var(--color-100)'\n        direction={() => use(state) ? 'top' : 'down'}\n      />\n    </Button>\n    <DropdownMenu\n      onSelect={hide}\n      values={values}\n      show={state}\n      element={button}>\n      Test\n    </DropdownMenu>\n  </>,\n  dom,\n)",example:[{type:p,props:{padding:8,gap:8,onclick:()=>{l.value=!l.value},onblur:u,ref:i},children:["Click Me",{type:e,props:{color:"var(--color-100)",direction:()=>a(l)?"top":"down"}}]},{type:t,props:{onSelect:u,values:[{value:"1",label:"Test 1"},{value:"2",label:"Test 2"},{value:"3",label:"Test 3"}],show:l,element:i}}]})],c=()=>({type:o,props:{component:t,name:"DropdownMenu",description:"# DropdownMenu\n\nThis component show a popup for an HTML element.\n\n```typescript\nimport { DropdownMenu } from '@cantinc/ui'\n```\n\n## Extends\n\n- [Dropdown](/popups/dropdown)\n\n## Extend\n\n- [Selector](/interaction/selector)\n",examples:d}});export{c as default};
