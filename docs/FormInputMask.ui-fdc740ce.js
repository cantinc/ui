import{e as n,C as e}from"./Component-8e718c3a.js";import{_ as o,d as t,at as a,aj as r,a as i,ar as s,B as p,X as l}from"./docs-c7a99efa.js";import{u as m}from"./useField-17e78dd8.js";import{c}from"./createFormData-4b97ea13.js";import"./Typography-21d0fa4f.js";function d(n){var{inputRef:e,onchange:s,disabled:p,validation:l}=n,c=o(n,["inputRef","onchange","disabled","validation"]);const{before:d,after:u,hint:f}=t(),{loading:h}=a(),{state:v,error:y,element:F}=m("",e);return{type:r,props:{...c,inputRef:F,oninput:n=>{v.value=n,y.value="",null==s||s(n)},error:()=>Boolean(y.value),value:()=>v.value,disabled:()=>{var n;return null!==(n=i(p))&&void 0!==n?n:h.value}},children:[d&&{type:"slot",props:{name:"before"},children:[d]}," ",u&&{type:"slot",props:{name:"after"},children:[u]},{type:"slot",props:{name:"hint"},children:[()=>y.value||f]}]}}var u=[n({id:"default",title:"Default",description:"By default, do nothing on click\n",code:"import innet from 'innet'\nimport dom from '@innet/dom'\n\nimport {\n  Form,\n  FormInputMask,\n  Button,\n  Notifications,\n  notify,\n  createFormDate,\n} from '@cantinc/ui'\n\nconst handleSuccess = (form: FormContext) => {\n  notify(`Phone: ${createFormDate(form).get('phone')}`)\n}\n\ninnet(\n  <>\n    <Form onsuccess={handleSuccess} vertical>\n      <FormInputMask\n        mask='+7 (999) 999-99-99'\n        name='phone'\n        label='Phone'\n        required\n        clearable\n      />\n      <Button>\n        Send\n      </Button>\n    </Form>\n    <Notifications />\n  </>,\n  dom,\n)",example:{type:s,props:{onsuccess:n=>{l(`Phone: ${c(n).get("phone")}`)},vertical:!0},children:[{type:d,props:{mask:"+7 (999) 999-99-99",name:"phone",label:"Phone",required:!0,clearable:!0}},{type:p,children:["Send"]}]}})],f=()=>({type:e,props:{component:d,name:"FormInput",description:"# FormInputMask\n\nUse this component to add an input.\n\n```typescript\nimport { FormInputMask } from '@cantinc/ui'\n```\n",examples:u}});export{f as default};
