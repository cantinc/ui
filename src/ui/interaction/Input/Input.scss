.root {
  position: relative;
  box-sizing: border-box;
  margin-bottom: 24px;
  cursor: text;
}

.before {
  order: -1;
}

.before,
.after {
  cursor: default;
}

.border {
  position: absolute;
  inset: 0;
  border: 1px solid var(--color-80);
  border-radius: 4px;
  pointer-events: none;
  transition: border-color .3s;

  .input:focus ~ & {
    border-color: var(--color-accent);
  }
  .error > .input:focus ~ &,
  .error > & {
    border-color: var(--color-red);
  }
}

.input {
  transition: all .3s;
  display: flex;
  width: 208px;
  background: transparent;
  border: none;
  border-radius: inherit;
  flex: 1;
  font-family: inherit;
  font-size: 16px;
  padding: 0;
  height: 20px;
  margin: 6px 0;

  &::placeholder {
    color: var(--color-60);
  }

  &:focus {
    outline: none;
  }

  .error > & {
    color: var(--color-red);
  }

  .error > &::placeholder {
    color: var(--color-red);
  }
  .withLabel > & {
    margin: 12px 0 0;
    opacity: 0;

    &:not([data-value='']),
    &:focus {
      opacity: 1;
    }
  }
}

.label {
  top: calc(50% - 10px);
  height: 20px;
  transition: all .3s;
  font-size: 16px;
  color: var(--color-60);
  position: absolute;

  .error > & {
    color: var(--color-red);
  }

  .input:not([data-value='']) ~ &,
  .input:focus ~ &,
  .before ~ & {
    top: calc(50% - 18px);
    color: var(--color-60);
    font-size: 12px;
  }
}

.hint {
  position: absolute;
  left: 0;
  top: 100%;
  font-size: 12px;
  color: var(--color-60);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding: 4px;
  max-width: 100%;
  box-sizing: border-box;
  opacity: 1;
  transition: opacity .3s, padding-left .3s;

  &:empty {
    padding-left: 13px;
    opacity: 0;
  }

  .error > & {
    color: var(--color-red);
  }
}
